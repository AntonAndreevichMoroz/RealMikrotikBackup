[
  {
    "id": 1,
    "name": "Workflow at startup",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          260,
          200
        ],
        "id": "27984f46-8cd9-4506-996a-5af425bf8dbb"
      },
      {
        "parameters": {
          "events": [
            "init"
          ]
        },
        "name": "n8n Trigger",
        "type": "n8n-nodes-base.n8nTrigger",
        "typeVersion": 1,
        "position": [
          260,
          40
        ],
        "id": "b242395c-5d6d-486f-ae9e-33a2d742b58d"
      },
      {
        "parameters": {
          "operation": "status",
          "repositoryPath": "/home/node/backup/rsc"
        },
        "name": "Git",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          660,
          200
        ],
        "continueOnFail": true,
        "id": "4e9af365-f616-4dfc-8fde-fbf76082da32"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{$json[\"error\"]}}",
                "operation": "isEmpty"
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          860,
          200
        ],
        "id": "84c80c38-f831-4000-a379-520f69fe5e17"
      },
      {
        "parameters": {
          "authentication": "gitPassword",
          "operation": "clone",
          "repositoryPath": "={{$node[\"Git\"].parameter[\"repositoryPath\"]}}",
          "sourceRepository": "={{ $env.GIT_URL }}"
        },
        "name": "Git1",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          1040,
          300
        ],
        "credentials": {
          "gitPassword": {
            "id": "3",
            "name": "Git account"
          }
        },
        "id": "100c26e0-6588-485d-a23d-47595640d243"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.GIT_USING ? $env.GIT_USING : \"false\" }}",
                "value2": "true"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF1",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          460,
          200
        ],
        "id": "52f284e5-e120-47a9-a62d-9fbed4833baf"
      },
      {
        "parameters": {
          "operation": "addConfig",
          "repositoryPath": "={{$node[\"Git\"].parameter[\"repositoryPath\"]}}",
          "key": "user.name",
          "value": "={{ $env.GIT_CONFIG_USERNAME}}",
          "options": {}
        },
        "name": "Git2",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          1200,
          200
        ],
        "id": "b8cafc7d-3939-4407-a13f-46ab83d7a4f8"
      },
      {
        "parameters": {
          "operation": "addConfig",
          "repositoryPath": "={{$node[\"Git\"].parameter[\"repositoryPath\"]}}",
          "key": "user.email",
          "value": "={{ $env.GIT_CONFIG_USERMAIL}}",
          "options": {}
        },
        "name": "Git3",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          1420,
          200
        ],
        "id": "b19a9a55-9935-42c2-92a9-a072fb38066e"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.MK_BACKUP_BINARY ? $env.MK_BACKUP_BINARY : \"true\" }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF2",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          460,
          40
        ],
        "id": "911d62ef-aad0-4bf4-bd18-60e1105dfe31"
      },
      {
        "parameters": {
          "command": "([ ! -d \"/home/node/backup/bin\" ] && mkdir /home/node/backup/bin);([ ! -d \"/home/node/backup/rsc\" ] && mkdir /home/node/backup/rsc)"
        },
        "name": "Execute Command",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          660,
          40
        ],
        "continueOnFail": true,
        "id": "8abcc32e-d2c1-4ac3-a940-7c240bbd2937"
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "n8n Trigger": {
        "main": [
          [
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "Git2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Git1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF1": {
        "main": [
          [
            {
              "node": "Git",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git2": {
        "main": [
          [
            {
              "node": "Git3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git1": {
        "main": [
          [
            {
              "node": "Git2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF2": {
        "main": [
          [
            {
              "node": "Execute Command",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-09-05T17:53:07.492Z",
    "updatedAt": "2022-11-12T15:43:03.778Z",
    "settings": {
      "errorWorkflow": "3"
    },
    "staticData": null,
    "pinData": null,
    "tags": []
  },
  {
    "id": 2,
    "name": "Mikrotik Backup",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          120,
          300
        ],
        "id": "618d424b-89b2-400b-afec-cd2551bf48e2"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT * FROM device WHERE active LIKE '1'"
        },
        "name": "MySQL",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          320,
          300
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list",
        "id": "7c2802e9-0f0d-4d00-8114-d3ef5bbb4997"
      },
      {
        "parameters": {
          "conditions": {
            "boolean": [],
            "string": [
              {
                "value1": "={{ $env.MK_BACKUP_BINARY ? $env.MK_BACKUP_BINARY : \"true\" }}",
                "value2": "true"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1000,
          120
        ],
        "id": "1fe9e7fd-6d94-44e7-96b6-e66c9710cdca"
      },
      {
        "parameters": {
          "conditions": {
            "boolean": [],
            "string": [
              {
                "value1": "={{ $env.MK_BACKUP_EXPORT ? $env.MK_BACKUP_EXPORT : \"true\" }}",
                "value2": "true"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF1",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1000,
          480
        ],
        "id": "b84fe0af-4dc1-405b-ae84-2621af5b6cc5"
      },
      {
        "parameters": {},
        "name": "DontExportBackupCreate",
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          1240,
          540
        ],
        "id": "b1b69646-82ca-4040-8188-f96864821db1"
      },
      {
        "parameters": {},
        "name": "DontBinaryBackupCreate",
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          1240,
          210
        ],
        "id": "042c01fd-03d9-4280-97d7-d08ff8892c64"
      },
      {
        "parameters": {
          "mode": "mergeByIndex",
          "join": "outer"
        },
        "name": "Merge",
        "type": "n8n-nodes-base.merge",
        "typeVersion": 1,
        "position": [
          3000,
          240
        ],
        "id": "2869b54c-64d7-4046-ab50-975281243008"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.GIT_USING ? $env.GIT_USING : \"false\" }}",
                "value2": "true"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF2",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1920,
          360
        ],
        "id": "65e9e39a-2ab5-4043-bdd3-8001892f7e88"
      },
      {
        "parameters": {
          "authentication": "gitPassword",
          "operation": "push",
          "repositoryPath": "={{$node[\"Set1\"].json[\"folderforrsc\"]}}",
          "options": {}
        },
        "name": "Git2",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          2500,
          360
        ],
        "credentials": {
          "gitPassword": {
            "id": "3",
            "name": "Git account"
          }
        },
        "id": "24b1931b-6a67-4f85-b44d-625de5c143c6"
      },
      {
        "parameters": {
          "batchSize": 1,
          "options": {}
        },
        "name": "SplitInBatches",
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 1,
        "position": [
          520,
          300
        ],
        "id": "ddce702f-46c2-49c9-baf2-c415ee72d161"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "boolean": [
              {
                "value1": true,
                "value2": "={{$node[\"SplitInBatches\"].context[\"noItemsLeft\"]}}"
              }
            ]
          }
        },
        "name": "IF3",
        "type": "n8n-nodes-base.if",
        "position": [
          3760,
          200
        ],
        "typeVersion": 1,
        "id": "65ca352f-74fe-4d83-a5a3-914725a86f69"
      },
      {
        "parameters": {
          "operation": "commit",
          "repositoryPath": "={{$node[\"Set1\"].json[\"folderforrsc\"]}}",
          "message": "=Резервная копия {{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}} от {{new Date().toLocaleDateString()}} {{new Date().toLocaleTimeString()}}",
          "options": {}
        },
        "name": "Git3",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          2300,
          360
        ],
        "id": "7730c562-a10d-4c54-afba-f952195d4f3e"
      },
      {
        "parameters": {
          "operation": "add",
          "repositoryPath": "={{$node[\"Set1\"].json[\"folderforrsc\"]}}",
          "pathsToAdd": "={{$node[\"Set1\"].json[\"filenamersc\"]}}"
        },
        "name": "Git",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          2100,
          360
        ],
        "id": "e0986aa3-eb7f-400d-9983-f9e538ace4bb"
      },
      {
        "parameters": {
          "triggerTimes": {
            "item": [
              {
                "mode": "custom",
                "cronExpression": "={{ $env.CRON_START ? $env.CRON_START : \"0 0 22 * * *\"}}"
              }
            ]
          }
        },
        "name": "Cron",
        "type": "n8n-nodes-base.cron",
        "typeVersion": 1,
        "position": [
          120,
          100
        ],
        "id": "f78614e0-9021-4693-aa14-9f60369309f0"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.MK_BACKUP_BINARY }}",
                "value2": "true"
              },
              {
                "value1": "={{ $env.MK_BACKUP_EXPORT }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF4",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          2700,
          40
        ],
        "id": "469fca19-00e3-4874-a35a-de15436a31e0"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.MK_BACKUP_BINARY }}",
                "value2": "true"
              },
              {
                "value1": "={{ $env.MK_BACKUP_EXPORT }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF5",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          2700,
          360
        ],
        "id": "92580c17-9e7f-474b-8aa4-913820b75981"
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "filenamebin",
                "value": "={{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}}_{{ $node[\"CurrentTime1\"].json[\"time\"] }}.backup"
              },
              {
                "name": "filenameonmikrotik",
                "value": "={{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}}.backup"
              },
              {
                "name": "folderforbin",
                "value": "/home/node/backup/bin/"
              },
              {
                "name": "username",
                "value": "={{$node[\"SplitInBatches\"].json[\"username\"]}}"
              },
              {
                "name": "ip_address",
                "value": "={{$node[\"SplitInBatches\"].json[\"ip_address\"]}}"
              },
              {
                "name": "sshport",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshport\"]}}"
              },
              {
                "name": "sshuse",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshuse\"]}}"
              },
              {
                "name": "sshkey",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshkey\"]}}"
              },
              {
                "name": "password",
                "value": "={{ $env.DATA_ENCRYPT_PASSWORD ? $node[\"HTTP Request\"].json[\"password\"] : $node[\"SplitInBatches\"].json[\"password\"] }}"
              }
            ]
          },
          "options": {}
        },
        "name": "Set",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1440,
          40
        ],
        "id": "a785acd0-3db5-4d4d-9e81-a8b77de2000d"
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "folderforrsc",
                "value": "/home/node/backup/rsc/"
              },
              {
                "name": "filenamersc",
                "value": "={{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}}.rsc"
              },
              {
                "name": "username",
                "value": "={{$node[\"SplitInBatches\"].json[\"username\"]}}"
              },
              {
                "name": "ip_address",
                "value": "={{$node[\"SplitInBatches\"].json[\"ip_address\"]}}"
              },
              {
                "name": "sshport",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshport\"]}}"
              },
              {
                "name": "sshuse",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshuse\"]}}"
              },
              {
                "name": "sshkey",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshkey\"]}}"
              },
              {
                "name": "password",
                "value": "={{ $env.DATA_ENCRYPT_PASSWORD ? $node[\"HTTP Request\"].json[\"password\"] : $node[\"SplitInBatches\"].json[\"password\"] }}"
              }
            ],
            "number": []
          },
          "options": {}
        },
        "name": "Set1",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1240,
          380
        ],
        "id": "7264c3f3-f4b2-4808-a6e4-ecc744ac6ec5"
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatus",
                "value": "BAD"
              },
              {
                "name": "lastbad",
                "value": "={{$node[\"CurrentTime\"].json[\"time\"]}}"
              }
            ],
            "number": [
              {
                "name": "id",
                "value": "={{$node[\"SplitInBatches\"].json[\"id\"]}}"
              }
            ]
          },
          "options": {}
        },
        "name": "Set2",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          3400,
          260
        ],
        "id": "78070f1b-ab07-4e1e-8a37-fed5b9f375f8"
      },
      {
        "parameters": {
          "operation": "update",
          "table": "device",
          "columns": "laststatus, lastbad"
        },
        "name": "MySQL1",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          3560,
          260
        ],
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "id": "b24bb78d-2798-4524-b25e-628eaf68e08c"
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatus",
                "value": "OK"
              },
              {
                "name": "lastok",
                "value": "={{$node[\"CurrentTime\"].json[\"time\"]}}"
              }
            ],
            "number": [
              {
                "name": "id",
                "value": "={{$node[\"SplitInBatches\"].json[\"id\"]}}"
              }
            ]
          },
          "options": {}
        },
        "name": "Set3",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          3400,
          20
        ],
        "id": "350fe5c4-1aca-4078-a589-327f8c9031f5"
      },
      {
        "parameters": {
          "operation": "update",
          "table": "device",
          "columns": "laststatus, lastok"
        },
        "name": "MySQL2",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          3560,
          20
        ],
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "id": "f9389eff-a69e-4879-9010-ec3fa883e6c3"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{$json[\"laststatusrsc\"]}}",
                "value2": "OK"
              },
              {
                "value1": "={{$json[\"laststatusbin\"]}}",
                "value2": "OK"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF11",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          3200,
          80
        ],
        "id": "ddf80838-aef3-4b34-a9fc-8d488a3dc166"
      },
      {
        "parameters": {
          "path": "backupall",
          "options": {}
        },
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          120,
          520
        ],
        "webhookId": "33deb629-14e4-4a24-b245-50dfd6fe7cb5",
        "id": "f6eb0bf4-eb93-4857-9bad-3283f9a0d137"
      },
      {
        "parameters": {
          "path": "backupone",
          "options": {}
        },
        "name": "Webhook1",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          120,
          -60
        ],
        "webhookId": "c4790d77-a07e-4507-8b58-c3fd4a0f8623",
        "id": "1a677bad-72fe-41f5-ab58-0df27d0e4dbc"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT * FROM device WHERE id LIKE '{{$node[\"Webhook1\"].json[\"query\"][\"id\"]}}'"
        },
        "name": "MySQL3",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          320,
          80
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list",
        "id": "62d0008f-5beb-47d6-b9fe-c76aec212c22"
      },
      {
        "parameters": {
          "value": "={{ new Date()}}",
          "dataPropertyName": "time",
          "custom": true,
          "toFormat": "YYYY-MM-DD HH:mm:ss",
          "options": {}
        },
        "name": "CurrentTime",
        "type": "n8n-nodes-base.dateTime",
        "typeVersion": 1,
        "position": [
          3040,
          80
        ],
        "id": "7d4b0a5f-9d6f-4c2f-8ce5-4a084b33be58"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.REPORT_SEND_TELEGRAM ? $env.REPORT_SEND_TELEGRAM : \"false\"}}",
                "value2": "true"
              },
              {
                "value1": "={{ $env.REPORT_SEND_EMAIL ? $env.REPORT_SEND_EMAIL : \"false\"}}",
                "value2": "true"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF14",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          3960,
          200
        ],
        "id": "59d8d597-ca64-48c9-a358-ec2a49bf9b0f"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT\n\tCOUNT(*) 'All',\n\tCOUNT(IF(active = '1', 1, NULL)) 'Active',\n\tCOUNT(IF(laststatus = 'BAD' AND active = '1', 1, NULL)) 'Active with error'\nFROM\n\tdevice"
        },
        "name": "MySQL4",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          4140,
          200
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list",
        "id": "cf09ff18-f057-4fb6-984d-eedad4937f94"
      },
      {
        "parameters": {
          "chatId": "={{ $env.TELEGRAM_CHATID_REPORT }}",
          "text": "=Актуальные данные резервного копирования Mikrotik\nВсего устройств в базе: {{ $node[\"MySQL4\"].json[\"All\"] }}\nАктивных устройств: {{ $node[\"MySQL4\"].json[\"Active\"] }}\nАктивных устройств с ошибками: {{ $node[\"MySQL4\"].json[\"Active with error\"] }}\nВремя завершения задания: {{new Date().toLocaleDateString()}} {{new Date().toLocaleTimeString()}}",
          "additionalFields": {}
        },
        "name": "Telegram",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [
          4540,
          80
        ],
        "credentials": {
          "telegramApi": {
            "id": "5",
            "name": "Telegram account"
          }
        },
        "id": "f1617c27-e0df-4de7-9b9e-22137b8c50d5"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.REPORT_SEND_TELEGRAM ? $env.REPORT_SEND_TELEGRAM : \"false\"}}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF15",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          4340,
          80
        ],
        "id": "5937bc9e-9c29-4a57-91bb-239e77c8c67a"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.REPORT_SEND_EMAIL ? $env.REPORT_SEND_EMAIL : \"false\"}}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF16",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          4340,
          320
        ],
        "id": "4130a6b4-adcc-4017-bba4-ef89eedb3d0c"
      },
      {
        "parameters": {
          "fromEmail": "={{ $env.SMTP_FROM_MAIL }}",
          "toEmail": "={{ $env.SMTP_TO_MAIL_REPORT }}",
          "subject": "RMBackup Notification",
          "text": "=Актуальные данные резервного копирования Mikrotik\nВсего устройств в базе: {{ $node[\"MySQL4\"].json[\"All\"] }}\nАктивных устройств: {{ $node[\"MySQL4\"].json[\"Active\"] }}\nАктивных устройств с ошибками: {{ $node[\"MySQL4\"].json[\"Active with error\"] }}\nВремя завершения задания: {{new Date().toLocaleDateString()}} {{new Date().toLocaleTimeString()}}",
          "options": {}
        },
        "name": "Send Email",
        "type": "n8n-nodes-base.emailSend",
        "typeVersion": 1,
        "position": [
          4540,
          320
        ],
        "credentials": {
          "smtp": {
            "id": "4",
            "name": "SMTP account"
          }
        },
        "id": "4d7a95fc-2cf1-44fb-b5cd-e9939cb514f8"
      },
      {
        "parameters": {
          "value": "={{ new Date()}}",
          "dataPropertyName": "time",
          "custom": true,
          "toFormat": "DD.MM.YYYY_HH.mm.ss",
          "options": {}
        },
        "name": "CurrentTime1",
        "type": "n8n-nodes-base.dateTime",
        "typeVersion": 1,
        "position": [
          1240,
          40
        ],
        "id": "53474382-debc-4fc4-80ca-55819f9bec95"
      },
      {
        "parameters": {
          "workflowId": "7"
        },
        "name": "Execute Workflow",
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1,
        "position": [
          1460,
          380
        ],
        "continueOnFail": true,
        "id": "2398c4af-a25d-4877-858f-4126101ce029"
      },
      {
        "parameters": {
          "workflowId": "8"
        },
        "name": "Execute Workflow1",
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1,
        "position": [
          1640,
          40
        ],
        "continueOnFail": true,
        "id": "dfbf16b0-4895-4e0b-9814-8e10ee37f331"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $node[\"Execute Workflow\"].json[\"laststatusrsc\"] }}",
                "value2": "OK"
              }
            ]
          }
        },
        "name": "IF17",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1660,
          480
        ],
        "id": "bb2f9a61-cf86-4c6c-bc58-9df2fc9710a1"
      },
      {
        "parameters": {
          "url": "http://web/device/passdecrypt",
          "responseFormat": "string",
          "dataPropertyName": "password",
          "options": {},
          "queryParametersUi": {
            "parameter": [
              {
                "name": "encryptpass",
                "value": "={{ $node[\"SplitInBatches\"].json[\"password\"] }}"
              },
              {
                "name": "secretkey",
                "value": "={{ $env.DATA_ENCRYPT_PASSWORD }}"
              }
            ]
          }
        },
        "name": "HTTP Request",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 1,
        "position": [
          860,
          300
        ],
        "id": "68b81c98-68a4-45f4-b683-72c53e02aaf2"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.DATA_ENCRYPT_PASSWORD }}",
                "operation": "isEmpty"
              }
            ]
          }
        },
        "name": "IF6",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          700,
          300
        ],
        "id": "327d6ef1-1d5c-4b89-a2e7-828458d4dafd"
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL": {
        "main": [
          [
            {
              "node": "SplitInBatches",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "CurrentTime1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "DontBinaryBackupCreate",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF1": {
        "main": [
          [
            {
              "node": "Set1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "DontExportBackupCreate",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Merge": {
        "main": [
          [
            {
              "node": "CurrentTime",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF2": {
        "main": [
          [
            {
              "node": "Git",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "IF5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SplitInBatches": {
        "main": [
          [
            {
              "node": "IF6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git2": {
        "main": [
          [
            {
              "node": "IF5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF3": {
        "main": [
          [
            {
              "node": "IF14",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "SplitInBatches",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git3": {
        "main": [
          [
            {
              "node": "Git2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git": {
        "main": [
          [
            {
              "node": "Git3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Cron": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF4": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "CurrentTime",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF5": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 1
            }
          ],
          [
            {
              "node": "CurrentTime",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set": {
        "main": [
          [
            {
              "node": "Execute Workflow1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set1": {
        "main": [
          [
            {
              "node": "Execute Workflow",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set2": {
        "main": [
          [
            {
              "node": "MySQL1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL1": {
        "main": [
          [
            {
              "node": "IF3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set3": {
        "main": [
          [
            {
              "node": "MySQL2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL2": {
        "main": [
          [
            {
              "node": "IF3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF11": {
        "main": [
          [
            {
              "node": "Set3",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook1": {
        "main": [
          [
            {
              "node": "MySQL3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL3": {
        "main": [
          [
            {
              "node": "SplitInBatches",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "CurrentTime": {
        "main": [
          [
            {
              "node": "IF11",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF14": {
        "main": [
          [
            {
              "node": "MySQL4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL4": {
        "main": [
          [
            {
              "node": "IF15",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF16",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF15": {
        "main": [
          [
            {
              "node": "Telegram",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF16": {
        "main": [
          [
            {
              "node": "Send Email",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "CurrentTime1": {
        "main": [
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Workflow": {
        "main": [
          [
            {
              "node": "IF17",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF17": {
        "main": [
          [
            {
              "node": "IF2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "IF5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Workflow1": {
        "main": [
          [
            {
              "node": "IF4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF6": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "HTTP Request",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-11-15T19:15:31.061Z",
    "updatedAt": "2022-11-12T15:43:03.798Z",
    "settings": {
      "errorWorkflow": "3"
    },
    "staticData": null,
    "pinData": null,
    "tags": []
  },
  {
    "id": 3,
    "name": "Error workflow",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          240,
          300
        ],
        "id": "16f3301b-d2c0-49e0-95fd-b792b3704be5"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.ERROR_NOTIFICATION_TELEGRAM ? $env.ERROR_NOTIFICATION_TELEGRAM : \"false\" }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          460,
          120
        ],
        "id": "98c6003d-468e-4004-9bef-976bb966c74f"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.ERROR_NOTIFICATION_EMAIL ? $env.ERROR_NOTIFICATION_EMAIL : \"false\" }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF1",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          460,
          300
        ],
        "id": "6c283bb2-c205-451a-94a2-0c8311acaeb6"
      },
      {
        "parameters": {
          "fromEmail": "={{ $env.SMTP_FROM_MAIL }}",
          "toEmail": "={{ $env.SMTP_TO_MAIL_NOTIFY }}",
          "subject": "RMBackup Notification",
          "text": "=Ошибка в процессе: {{ $node[\"Error Trigger\"].json[\"workflow\"][\"name\"] }} (ID: {{ $node[\"Error Trigger\"].json[\"workflow\"][\"id\"] }})\nТип ошибки: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"name\"] }}\nОшибка в узле: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"node\"][\"name\"] }}\nТекст ошибки: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"message\"] }}\nПодробное описание ошибки:\n{{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"stack\"] }}",
          "options": {}
        },
        "name": "Send Email",
        "type": "n8n-nodes-base.emailSend",
        "typeVersion": 1,
        "position": [
          660,
          300
        ],
        "credentials": {
          "smtp": {
            "id": "4",
            "name": "SMTP account"
          }
        },
        "id": "3e9bbeb8-d543-42fa-9aac-0fb49443d809"
      },
      {
        "parameters": {
          "chatId": "={{ $env.TELEGRAM_CHATID_NOTIFY }}",
          "text": "=Ошибка в процессе: {{ $node[\"Error Trigger\"].json[\"workflow\"][\"name\"] }} (ID: {{ $node[\"Error Trigger\"].json[\"workflow\"][\"id\"] }})\nТип ошибки: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"name\"] }}\nОшибка в узле: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"node\"][\"name\"] }}\nТекст ошибки: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"message\"] }}\nПодробное описание ошибки:\n{{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"stack\"] }}",
          "additionalFields": {}
        },
        "name": "Telegram",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [
          660,
          120
        ],
        "credentials": {
          "telegramApi": {
            "id": "5",
            "name": "Telegram account"
          }
        },
        "id": "beb466a0-71f3-4e36-9c6c-fb453aca0d3a"
      },
      {
        "parameters": {},
        "name": "Error Trigger",
        "type": "n8n-nodes-base.errorTrigger",
        "typeVersion": 1,
        "position": [
          240,
          120
        ],
        "id": "1282bebd-19e7-4f48-afcf-c2a7c2e528de"
      },
      {
        "parameters": {
          "path": "ad03b049-ec34-4683-b405-49010361dac2",
          "options": {}
        },
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          240,
          480
        ],
        "webhookId": "ad03b049-ec34-4683-b405-49010361dac2",
        "id": "8a33e2b7-c652-418c-adb1-31355f033836"
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF1": {
        "main": [
          [
            {
              "node": "Send Email",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "Telegram",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Error Trigger": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-11-27T12:10:40.170Z",
    "updatedAt": "2022-11-12T15:43:03.805Z",
    "settings": {},
    "staticData": null,
    "pinData": null,
    "tags": []
  },
  {
    "id": 4,
    "name": "Purge old backup",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          240,
          300
        ],
        "id": "959ca50f-7f83-459c-b012-1c47659b698d"
      },
      {
        "parameters": {
          "command": "=find {{$node[\"Set\"].json[\"folderforbin\"]}} -name \"{{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}}*\" -type f -printf '%T+ %p\\n' | sort -r | head -{{$node[\"Set\"].json[\"purgenpiece\"]}} | grep -n \"\" | grep ^{{$node[\"Set\"].json[\"purgenpiece\"]}} | awk '{print $2}'"
        },
        "name": "Execute Command",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          1200,
          220
        ],
        "id": "d530fa2b-6482-4987-961b-7a3330e77681"
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "folderforbin",
                "value": "/home/node/backup/bin/"
              },
              {
                "name": "purgeoldbackup",
                "value": "={{ $env.PURGE_OLD_BACKUP ? $env.PURGE_OLD_BACKUP : \"true\" }}"
              },
              {
                "name": "purgenpiece",
                "value": "={{ $env.PURGE_N_PIECE ? parseInt($env.PURGE_N_PIECE) + 1 : 11 }}"
              }
            ]
          },
          "options": {}
        },
        "name": "Set",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          420,
          300
        ],
        "id": "0bfbd71b-fae0-48c1-a131-8fb958b02569"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT * FROM device"
        },
        "name": "MySQL",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          800,
          220
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get device list",
        "id": "b2dcca7d-fac9-448b-81c6-7be2fa8d81f8"
      },
      {
        "parameters": {
          "batchSize": 1,
          "options": {}
        },
        "name": "SplitInBatches",
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 1,
        "position": [
          1000,
          220
        ],
        "id": "445f52c4-2a66-4dd9-81b1-0d895a53f0f4"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $node[\"Set\"].json[\"purgeoldbackup\"] }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          600,
          300
        ],
        "id": "b510e0d3-7af9-43e3-b7d6-86a71042b464"
      },
      {
        "parameters": {
          "command": "=find {{$node[\"Set\"].json[\"folderforbin\"]}}  -name \"{{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}}*\" ! -newer {{$node[\"Execute Command\"].json[\"stdout\"]}} -type f -delete"
        },
        "name": "Execute Command1",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          1560,
          240
        ],
        "id": "3f8d99db-d867-47d7-ace5-698cb1ecf420"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{$node[\"Execute Command\"].json[\"stdout\"]}}",
                "operation": "isEmpty"
              }
            ]
          }
        },
        "name": "IF1",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1380,
          220
        ],
        "id": "9813a442-6d07-45f0-b206-f0e2a311a632"
      },
      {
        "parameters": {
          "triggerTimes": {
            "item": [
              {
                "mode": "custom",
                "cronExpression": "={{ $env.CRON_PURGE_START ? $env.CRON_START : \"0 0 21 * * *\"}}"
              }
            ]
          }
        },
        "name": "Cron",
        "type": "n8n-nodes-base.cron",
        "typeVersion": 1,
        "position": [
          240,
          140
        ],
        "id": "8fd0529e-7950-409a-aef1-8c24d2eb4852"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "boolean": [
              {
                "value1": true,
                "value2": "={{$node[\"SplitInBatches\"].context[\"noItemsLeft\"]}}"
              }
            ]
          }
        },
        "name": "IF3",
        "type": "n8n-nodes-base.if",
        "position": [
          1740,
          120
        ],
        "typeVersion": 1,
        "id": "25b0bc08-33ad-4179-8b6b-ee0840720a7f"
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL": {
        "main": [
          [
            {
              "node": "SplitInBatches",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SplitInBatches": {
        "main": [
          [
            {
              "node": "Execute Command",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command": {
        "main": [
          [
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF1": {
        "main": [
          [
            {
              "node": "IF3",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Execute Command1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Cron": {
        "main": [
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command1": {
        "main": [
          [
            {
              "node": "IF3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF3": {
        "main": [
          [],
          [
            {
              "node": "SplitInBatches",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-12-02T07:59:06.522Z",
    "updatedAt": "2022-11-12T15:43:03.812Z",
    "settings": {
      "saveExecutionProgress": true,
      "saveManualExecutions": true
    },
    "staticData": null,
    "pinData": null,
    "tags": []
  },
  {
    "id": 5,
    "name": "DownloadFile",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          240,
          300
        ],
        "id": "19e5ac0a-d936-42bc-b8e3-03f48e05c887"
      },
      {
        "parameters": {
          "path": "download",
          "responseMode": "responseNode",
          "options": {
            "rawBody": true
          }
        },
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          240,
          500
        ],
        "webhookId": "d792541a-0838-4ded-94d4-a3395b7971ae",
        "id": "ceae660e-92a2-43f5-b6e2-9977100f8d40"
      },
      {
        "parameters": {
          "respondWith": "binary",
          "options": {
            "responseCode": 200
          }
        },
        "name": "Respond to Webhook",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 1,
        "position": [
          1160,
          500
        ],
        "id": "3f7c80ee-8ce0-4544-b559-981df5b24035"
      },
      {
        "parameters": {
          "filePath": "={{ $json[\"filepath\"] }}"
        },
        "name": "Read Binary File",
        "type": "n8n-nodes-base.readBinaryFile",
        "typeVersion": 1,
        "position": [
          960,
          500
        ],
        "id": "ee40618b-0ef2-4e78-b5a2-a96898bc51a3"
      },
      {
        "parameters": {
          "dataType": "string",
          "value1": "={{$node[\"Webhook\"].json[\"query\"][\"type\"]}}",
          "rules": {
            "rules": [
              {
                "value2": "bin"
              },
              {
                "value2": "rsc",
                "output": 1
              }
            ]
          },
          "fallbackOutput": 3
        },
        "name": "Switch",
        "type": "n8n-nodes-base.switch",
        "typeVersion": 1,
        "position": [
          460,
          500
        ],
        "id": "32089dba-526c-40aa-aaee-0bc3d4c99dd4"
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "filepath",
                "value": "=/home/node/backup/rsc/{{$node[\"Webhook\"].json[\"query\"][\"id\"]}}_{{$node[\"Webhook\"].json[\"query\"][\"name\"]}}.rsc"
              }
            ]
          },
          "options": {}
        },
        "name": "Set",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          660,
          500
        ],
        "id": "8d23108e-1596-47c5-8fe4-98dae8426a4c"
      },
      {
        "parameters": {
          "command": "=find /home/node/backup/bin/ -name \"{{$node[\"Webhook\"].json[\"query\"][\"id\"]}}_{{$node[\"Webhook\"].json[\"query\"][\"name\"]}}*\" -type f -printf '%T+ %p\\n' | sort -r | head -1 | awk '{print $2}'"
        },
        "name": "Execute Command",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          660,
          340
        ],
        "id": "36bc1fcc-d2c5-420b-abf0-6f642517f0a6"
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "filepath",
                "value": "={{ $node[\"Execute Command\"].json[\"stdout\"] }}"
              }
            ]
          },
          "options": {}
        },
        "name": "Set1",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          820,
          340
        ],
        "id": "385449c4-913d-4e5d-a11c-493611d49c88"
      },
      {
        "parameters": {
          "respondWith": "noData",
          "options": {
            "responseCode": 400
          }
        },
        "name": "Respond to Webhook1",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 1,
        "position": [
          660,
          660
        ],
        "id": "8460bdb1-6637-454b-af97-bc01f9af56c4"
      }
    ],
    "connections": {
      "Webhook": {
        "main": [
          [
            {
              "node": "Switch",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Read Binary File": {
        "main": [
          [
            {
              "node": "Respond to Webhook",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch": {
        "main": [
          [
            {
              "node": "Execute Command",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ],
          [],
          [
            {
              "node": "Respond to Webhook1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set": {
        "main": [
          [
            {
              "node": "Read Binary File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command": {
        "main": [
          [
            {
              "node": "Set1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set1": {
        "main": [
          [
            {
              "node": "Read Binary File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-12-03T18:10:27.992Z",
    "updatedAt": "2022-11-12T15:43:03.819Z",
    "settings": {
      "saveExecutionProgress": "DEFAULT",
      "errorWorkflow": "3"
    },
    "staticData": null,
    "pinData": null,
    "tags": []
  },
  {
    "id": 6,
    "name": "Test Connection",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          -340,
          300
        ],
        "id": "34137d32-da07-4773-9d24-da5fe8ae74bc"
      },
      {
        "parameters": {
          "path": "testconnection",
          "responseMode": "responseNode",
          "options": {}
        },
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          -340,
          460
        ],
        "webhookId": "17577a90-4e1d-4d14-9cd5-be38e35cf2e1",
        "id": "98eb46ad-c571-4aeb-88ef-f82bd48bf3df"
      },
      {
        "parameters": {
          "respondWith": "text",
          "responseBody": "<div class=\"alert alert-success\">Подключение прошло успешно</div>",
          "options": {
            "responseCode": 200
          }
        },
        "name": "Respond to Webhook",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 1,
        "position": [
          1220,
          360
        ],
        "id": "3052c54e-9c8f-4420-a57a-82e12e9fcec0"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT * FROM device WHERE id LIKE '{{$node[\"Webhook\"].json[\"query\"][\"id\"]}}'"
        },
        "name": "MySQL",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          -40,
          380
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list",
        "id": "15613f19-0c5a-432c-906c-df15fabb5c9f"
      },
      {
        "parameters": {
          "command": "=sshpass -p {{ $env.DATA_ENCRYPT_PASSWORD ? $node[\"HTTP Request\"].json[\"password\"] : $node[\"MySQL\"].json[\"password\"] }}  ssh -o StrictHostKeyChecking=no {{ $node[\"MySQL\"].json[\"username\"] }}@{{ $node[\"MySQL\"].json[\"ip_address\"] }} -p {{ $node[\"MySQL\"].json[\"sshport\"] }} ':put [/system identity get name]' > /dev/null 2>&1; echo $?"
        },
        "name": "Execute Command",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          760,
          480
        ],
        "id": "a9b72375-8a9c-4b25-a31a-3fa052cc69cd"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $node[\"Execute Command\"].json[\"stdout\"] }}",
                "value2": "0"
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1000,
          480
        ],
        "id": "eb8db1ea-561c-4aa0-bc4e-1670a8a8e7d4"
      },
      {
        "parameters": {
          "respondWith": "text",
          "responseBody": "=<div class=\"alert alert-danger\">Ошибка с кодом {{ $node[\"Execute Command\"].json[\"stdout\"] }}. {{ $node[\"Execute Command\"].json[\"stderr\"] }}</div>",
          "options": {
            "responseCode": 200
          }
        },
        "name": "Respond to Webhook1",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 1,
        "position": [
          1220,
          520
        ],
        "id": "c73b04a0-56d5-41d2-bc2f-7590d2d923c1"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"MySQL\"].json[\"sshuse\"]}}",
                "operation": "equal",
                "value2": 1
              }
            ]
          }
        },
        "name": "IF1",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          540,
          380
        ],
        "id": "3e96baec-05cd-4c6d-b750-e307295b32bc"
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "command": ":put [/system identity get name]",
          "cwd": "={{}}"
        },
        "name": "SSH2",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          760,
          240
        ],
        "notesInFlow": true,
        "alwaysOutputData": true,
        "credentials": {
          "sshPrivateKey": {
            "id": "7",
            "name": "SSH Private Key account Test"
          }
        },
        "continueOnFail": true,
        "notes": "Create binary backup",
        "id": "ccb35d9a-ec5b-4b9d-9d5c-8da11aa5cffd"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $node[\"SSH2\"].json[\"stdout\"] }}",
                "operation": "isEmpty"
              }
            ]
          }
        },
        "name": "IF2",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1000,
          240
        ],
        "id": "1ceb485f-0927-4402-b6c2-c39556c3ee78"
      },
      {
        "parameters": {
          "respondWith": "text",
          "responseBody": "=<div class=\"alert alert-danger\">Подключение не удалось</div>",
          "options": {
            "responseCode": 200
          }
        },
        "name": "Respond to Webhook2",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 1,
        "position": [
          1220,
          200
        ],
        "id": "69aad2cf-4ac1-4fcc-b307-1bbd4c8e6f38"
      },
      {
        "parameters": {
          "url": "http://web/device/passdecrypt",
          "responseFormat": "string",
          "dataPropertyName": "password",
          "options": {},
          "queryParametersUi": {
            "parameter": [
              {
                "name": "encryptpass",
                "value": "={{ $node[\"MySQL\"].json[\"password\"] }}"
              },
              {
                "name": "secretkey",
                "value": "={{ $env.DATA_ENCRYPT_PASSWORD }}"
              }
            ]
          }
        },
        "name": "HTTP Request",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 1,
        "position": [
          360,
          380
        ],
        "id": "a5ad739b-7b97-4a9b-a0e3-3967cd0a9506"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.DATA_ENCRYPT_PASSWORD }}",
                "operation": "isEmpty"
              }
            ]
          }
        },
        "name": "IF6",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          160,
          380
        ],
        "id": "e7313162-c469-44ad-8b8e-0696903ee509"
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL": {
        "main": [
          [
            {
              "node": "IF6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "Respond to Webhook",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Respond to Webhook1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF1": {
        "main": [
          [
            {
              "node": "SSH2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Execute Command",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH2": {
        "main": [
          [
            {
              "node": "IF2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF2": {
        "main": [
          [
            {
              "node": "Respond to Webhook2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Respond to Webhook",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request": {
        "main": [
          [
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF6": {
        "main": [
          [
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "HTTP Request",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-12-14T09:28:03.807Z",
    "updatedAt": "2022-11-12T15:43:03.831Z",
    "settings": {},
    "staticData": null,
    "pinData": null,
    "tags": []
  },
  {
    "id": 7,
    "name": "Export Backup",
    "active": false,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          -240,
          260
        ],
        "id": "909cd4c1-1176-4198-bc87-e82d2442e4d2"
      },
      {
        "parameters": {
          "command": "={{ $env.MK_BACKUP_HIDE_SENSITIVE == \"true\" ? 'if (:put [/system resource get version]~\"^7\") do={/export file=' + $node[\"Start\"].json[\"filenamersc\"] + '} else={/export hide-sensitive file=' + $node[\"Start\"].json[\"filenamersc\"] + '}' : 'if (:put [/system resource get version]~\"^7\") do={[:parse \"/export show-sensitive file=' + $node[\"Start\"].json[\"filenamersc\"] + '\"]} else={/export file=' + $node[\"Start\"].json[\"filenamersc\"] + '}' }}",
          "cwd": "={{}}"
        },
        "name": "SSH2",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          140,
          360
        ],
        "notesInFlow": true,
        "id": "2c344f9c-4221-4cd6-bf30-f9a0df55e3aa",
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Create export backup"
      },
      {
        "parameters": {
          "resource": "file",
          "operation": "download",
          "path": "={{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "SSH3",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          340,
          360
        ],
        "notesInFlow": true,
        "retryOnFail": true,
        "maxTries": 2,
        "waitBetweenTries": 3000,
        "id": "8b800b52-6271-48ec-bbac-3ea5689f5706",
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Download binary backup"
      },
      {
        "parameters": {
          "fileName": "={{$node[\"Start\"].json[\"folderforrsc\"]}}{{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "Write Binary File1",
        "type": "n8n-nodes-base.writeBinaryFile",
        "typeVersion": 1,
        "position": [
          540,
          360
        ],
        "id": "c3b7b886-3584-4fdc-ac3f-aa0994df615a"
      },
      {
        "parameters": {
          "command": "=/file remove \"{{$node[\"Start\"].json[\"filenamersc\"]}}\"",
          "cwd": "={{}}"
        },
        "name": "SSH4",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          740,
          360
        ],
        "notesInFlow": true,
        "id": "16ef82e2-b4d9-4550-9d32-a33a3c158e30",
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Delete binary backup"
      },
      {
        "parameters": {
          "command": "=sed -i 's/^#.*by/#/' {{$node[\"Start\"].json[\"folderforrsc\"]}}{{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "Execute Command",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          940,
          360
        ],
        "id": "98deddcc-b4ec-42cf-8c1f-d36bc9ffb077",
        "continueOnFail": true
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH2\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF8",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          240,
          560
        ],
        "id": "6617f6bd-7b71-4b99-beef-c3860d85a8de"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH3\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF9",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          440,
          600
        ],
        "id": "929e4203-58a2-490d-b54f-c0f14cac34fa"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH4\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF10",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          840,
          620
        ],
        "id": "ca48849d-83fb-4b11-83d9-28c0f83c000f"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$json[\"exitCode\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF12",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1040,
          540
        ],
        "id": "1e20e0b5-f28f-406e-ac73-39b6fa73c4c0"
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatusrsc",
                "value": "BAD"
              }
            ]
          },
          "options": {}
        },
        "name": "Set5",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1360,
          280
        ],
        "id": "e943b88b-6124-4e8e-8f19-8b786d062df8"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"Start\"].json[\"sshuse\"]}}",
                "operation": "equal",
                "value2": 1
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          -60,
          260
        ],
        "id": "6c67a482-afe2-43fc-9b99-2d131ad350b4"
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "command": "={{ $env.MK_BACKUP_HIDE_SENSITIVE == \"true\" ? 'if (:put [/system resource get version]~\"^7\") do={/export file=' + $node[\"Start\"].json[\"filenamersc\"] + '} else={/export hide-sensitive file=' + $node[\"Start\"].json[\"filenamersc\"] + '}' : 'if (:put [/system resource get version]~\"^7\") do={[:parse \"/export show-sensitive file=' + $node[\"Start\"].json[\"filenamersc\"] + '\"]} else={/export file=' + $node[\"Start\"].json[\"filenamersc\"] + '}' }}",
          "cwd": "={{}}"
        },
        "name": "SSH",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          100,
          -180
        ],
        "notesInFlow": true,
        "id": "6eb283bc-b4a9-4028-b131-d47bd3738040",
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Create export backup"
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "resource": "file",
          "operation": "download",
          "path": "={{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "SSH5",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          300,
          -180
        ],
        "notesInFlow": true,
        "retryOnFail": true,
        "maxTries": 2,
        "waitBetweenTries": 3000,
        "id": "8c0d37c2-7dec-4087-8b41-7d7ca775bd1e",
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Download binary backup"
      },
      {
        "parameters": {
          "fileName": "={{$node[\"Start\"].json[\"folderforrsc\"]}}{{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "Write Binary File",
        "type": "n8n-nodes-base.writeBinaryFile",
        "typeVersion": 1,
        "position": [
          500,
          -180
        ],
        "id": "c7347721-0ef1-49ad-a971-70087396d1b7"
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "command": "=/file remove \"{{$node[\"Start\"].json[\"filenamersc\"]}}\"",
          "cwd": "={{}}"
        },
        "name": "SSH6",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          700,
          -180
        ],
        "notesInFlow": true,
        "id": "c6c0a234-9192-4fa7-916e-f03b76de0057",
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Delete binary backup"
      },
      {
        "parameters": {
          "command": "=sed -i 's/^#.*by/#/' {{$node[\"Start\"].json[\"folderforrsc\"]}}{{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "Execute Command1",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          900,
          -180
        ],
        "id": "ed5d57b3-921a-4b13-9412-ae78c810c857",
        "continueOnFail": true
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF11",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          200,
          20
        ],
        "id": "ea5e7d7c-a423-410b-9920-12fd638426bd"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH5\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF13",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          400,
          60
        ],
        "id": "dfc27ab4-076e-4ca2-819b-45defa5fb9c1"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH6\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF14",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          800,
          80
        ],
        "id": "2a51b6f5-0365-45f1-b8b9-8edd4432cc18"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$json[\"exitCode\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF15",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1000,
          0
        ],
        "id": "66a6e2cf-584a-46ff-b2ac-b8c4378b5cb2"
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatusrsc",
                "value": "OK"
              }
            ]
          },
          "options": {}
        },
        "name": "Set",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1360,
          60
        ],
        "id": "9caf63a5-1ac1-4b61-9634-3c808704a479"
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH2": {
        "main": [
          [
            {
              "node": "IF8",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH3": {
        "main": [
          [
            {
              "node": "IF9",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Write Binary File1": {
        "main": [
          [
            {
              "node": "SSH4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH4": {
        "main": [
          [
            {
              "node": "IF10",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command": {
        "main": [
          [
            {
              "node": "IF12",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF8": {
        "main": [
          [
            {
              "node": "Set5",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "SSH3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF9": {
        "main": [
          [
            {
              "node": "Set5",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Write Binary File1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF10": {
        "main": [
          [
            {
              "node": "Set5",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Execute Command",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF12": {
        "main": [
          [
            {
              "node": "Set5",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "SSH",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "SSH2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH": {
        "main": [
          [
            {
              "node": "IF11",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH5": {
        "main": [
          [
            {
              "node": "IF13",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Write Binary File": {
        "main": [
          [
            {
              "node": "SSH6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH6": {
        "main": [
          [
            {
              "node": "IF14",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command1": {
        "main": [
          [
            {
              "node": "IF15",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF11": {
        "main": [
          [],
          [
            {
              "node": "SSH5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF13": {
        "main": [
          [],
          [
            {
              "node": "Write Binary File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF14": {
        "main": [
          [],
          [
            {
              "node": "Execute Command1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF15": {
        "main": [
          [
            {
              "node": "Set5",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-12-18T14:59:02.109Z",
    "updatedAt": "2022-11-12T15:57:00.493Z",
    "settings": {
      "saveExecutionProgress": true,
      "saveManualExecutions": true,
      "errorWorkflow": "3"
    },
    "staticData": null,
    "pinData": {},
    "tags": []
  },
  {
    "id": 8,
    "name": "Binary Backup",
    "active": false,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          220,
          320
        ],
        "id": "f07b64ee-5121-4b40-9d18-444fa23835ef"
      },
      {
        "parameters": {
          "command": "=/system backup save{{ $env.MK_BACKUP_ENCRYPT_PASSWORD ? \" dont-encrypt=no encryption=aes-sha256\" : \" dont-encrypt=yes\"}} name={{$node[\"Start\"].json[\"filenameonmikrotik\"]}}{{ $env.MK_BACKUP_ENCRYPT_PASSWORD ? \" password=\" +  $env.MK_BACKUP_ENCRYPT_PASSWORD : \"\"}}",
          "cwd": "={{}}"
        },
        "name": "SSH",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          600,
          640
        ],
        "notesInFlow": true,
        "alwaysOutputData": true,
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Create binary backup",
        "id": "7a5c0650-5e6e-4b92-82fa-57ff61e7d2e5"
      },
      {
        "parameters": {
          "resource": "file",
          "operation": "download",
          "path": "={{$node[\"Start\"].json[\"filenameonmikrotik\"]}}"
        },
        "name": "SSH1",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          800,
          640
        ],
        "notesInFlow": true,
        "retryOnFail": true,
        "maxTries": 2,
        "waitBetweenTries": 3000,
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Download binary backup",
        "id": "60013d28-4010-47cb-9b41-e16d0a6d23da"
      },
      {
        "parameters": {
          "command": "=/file remove \"{{$node[\"Start\"].json[\"filenameonmikrotik\"]}}\"",
          "cwd": "={{}}"
        },
        "name": "SSH5",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          1200,
          640
        ],
        "notesInFlow": true,
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Delete binary backup",
        "id": "729b576a-b34f-406d-811f-90c5387ecd62"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF6",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          700,
          480
        ],
        "id": "8158ccf9-58a3-4456-aa00-59e4040c20c3"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH1\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF7",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          900,
          400
        ],
        "id": "eefb309c-fbbd-4eca-9e43-f4357b3cf30c"
      },
      {
        "parameters": {
          "fileName": "={{$node[\"Start\"].json[\"folderforbin\"]}}{{$node[\"Start\"].json[\"filenamebin\"]}}"
        },
        "name": "Write Binary File",
        "type": "n8n-nodes-base.writeBinaryFile",
        "typeVersion": 1,
        "position": [
          1000,
          640
        ],
        "id": "5accd90e-6eb8-4cef-aeb8-e593ed3f607f"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH5\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF13",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1300,
          480
        ],
        "id": "5f83dee8-015a-4b82-b218-dbf46588ab09"
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatusbin",
                "value": "BAD"
              }
            ]
          },
          "options": {}
        },
        "name": "Set4",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1560,
          420
        ],
        "id": "aad72c1d-8c35-4c3e-a9ab-47ed0cf56c94"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"Start\"].json[\"sshuse\"]}}",
                "operation": "equal",
                "value2": 1
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          400,
          320
        ],
        "id": "7d10e6c9-9d47-4625-8853-1bebe07f2c83"
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "command": "=/system backup save{{ $env.MK_BACKUP_ENCRYPT_PASSWORD ? \" dont-encrypt=no encryption=aes-sha256\" : \" dont-encrypt=yes\"}} name={{$node[\"Start\"].json[\"filenameonmikrotik\"]}}{{ $env.MK_BACKUP_ENCRYPT_PASSWORD ? \" password=\" +  $env.MK_BACKUP_ENCRYPT_PASSWORD : \"\"}}",
          "cwd": "={{}}"
        },
        "name": "SSH2",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          620,
          80
        ],
        "notesInFlow": true,
        "alwaysOutputData": true,
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Create binary backup",
        "id": "f469685f-ebb6-4ba2-bc42-2850ef07e072"
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "resource": "file",
          "operation": "download",
          "path": "={{$node[\"Start\"].json[\"filenameonmikrotik\"]}}"
        },
        "name": "SSH3",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          820,
          80
        ],
        "notesInFlow": true,
        "retryOnFail": true,
        "maxTries": 2,
        "waitBetweenTries": 3000,
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Download binary backup",
        "id": "2f4337c7-be2e-4fe7-a17d-ada9c1a909d8"
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "command": "=/file remove \"{{$node[\"Start\"].json[\"filenameonmikrotik\"]}}\"",
          "cwd": "={{}}"
        },
        "name": "SSH6",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          1220,
          80
        ],
        "notesInFlow": true,
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Delete binary backup",
        "id": "7f489d8e-79ce-4d49-8bcb-654fa50dfe2f"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH2\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF8",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          720,
          -80
        ],
        "id": "068c0cd4-958c-48e0-a898-cc856f111ffd"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH3\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF9",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          940,
          -180
        ],
        "id": "2184f668-4dca-4e58-8489-2a4261f5b5b3"
      },
      {
        "parameters": {
          "fileName": "={{$node[\"Start\"].json[\"folderforbin\"]}}{{$node[\"Start\"].json[\"filenamebin\"]}}"
        },
        "name": "Write Binary File1",
        "type": "n8n-nodes-base.writeBinaryFile",
        "typeVersion": 1,
        "position": [
          1020,
          80
        ],
        "id": "ab17738d-18a6-4551-8d3f-3c8b99ad1004"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH6\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF14",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1320,
          -80
        ],
        "id": "dc6c7c9c-6951-4fd1-80b9-97ab9cd511d5"
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatusbin",
                "value": "OK"
              }
            ]
          },
          "options": {}
        },
        "name": "Set",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1560,
          120
        ],
        "id": "eae65a09-650e-45c7-98d5-bbb219e2579f"
      }
    ],
    "connections": {
      "SSH": {
        "main": [
          [
            {
              "node": "IF6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH1": {
        "main": [
          [
            {
              "node": "IF7",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH5": {
        "main": [
          [
            {
              "node": "IF13",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF6": {
        "main": [
          [
            {
              "node": "Set4",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "SSH1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF7": {
        "main": [
          [
            {
              "node": "Set4",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Write Binary File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Write Binary File": {
        "main": [
          [
            {
              "node": "SSH5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF13": {
        "main": [
          [
            {
              "node": "Set4",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Start": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "SSH2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "SSH",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH2": {
        "main": [
          [
            {
              "node": "IF8",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH3": {
        "main": [
          [
            {
              "node": "IF9",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH6": {
        "main": [
          [
            {
              "node": "IF14",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF8": {
        "main": [
          [],
          [
            {
              "node": "SSH3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF9": {
        "main": [
          [],
          [
            {
              "node": "Write Binary File1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Write Binary File1": {
        "main": [
          [
            {
              "node": "SSH6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF14": {
        "main": [
          [
            {
              "node": "Set4",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-12-18T15:22:00.567Z",
    "updatedAt": "2022-11-12T15:43:03.845Z",
    "settings": {
      "saveExecutionProgress": true,
      "saveManualExecutions": true,
      "errorWorkflow": "3"
    },
    "staticData": null,
    "pinData": null,
    "tags": []
  },
  {
    "id": 9,
    "name": "ZabbixMonitoring",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          460,
          120
        ],
        "id": "79f5e11f-f4ab-49ac-86b2-dbc546ea1bd8"
      },
      {
        "parameters": {
          "path": "lld",
          "responseMode": "lastNode",
          "responseData": "allEntries",
          "options": {}
        },
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          460,
          300
        ],
        "webhookId": "a1aa560b-4dc0-4d79-8329-9554e860b718",
        "id": "7279b43e-db68-4dd1-bd55-48ea2197194f"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT id,name FROM device WHERE active LIKE '1'"
        },
        "name": "MySQL",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          680,
          300
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list",
        "id": "44f9727e-8cf0-4bb0-a619-5e6078d4fb81"
      },
      {
        "parameters": {
          "path": "getstatus",
          "responseMode": "lastNode",
          "options": {}
        },
        "name": "Webhook1",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          460,
          500
        ],
        "webhookId": "2365c0ed-9766-4cc2-9eae-e74be986399e",
        "id": "f0baea9c-a5ee-409b-95b9-2747fc8f094c"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT laststatus FROM device WHERE id LIKE '{{ $node[\"Webhook1\"].json[\"query\"][\"id\"] }}'"
        },
        "name": "MySQL1",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          680,
          500
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list",
        "id": "065f08f0-915c-4fcd-b7af-854360100e51"
      }
    ],
    "connections": {
      "Webhook": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook1": {
        "main": [
          [
            {
              "node": "MySQL1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2022-03-12T05:39:01.228Z",
    "updatedAt": "2022-11-12T15:43:03.856Z",
    "settings": {
      "saveExecutionProgress": true,
      "saveManualExecutions": true
    },
    "staticData": null,
    "pinData": null,
    "tags": []
  }
]