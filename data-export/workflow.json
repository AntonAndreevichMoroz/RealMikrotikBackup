[
  {
    "id": 1,
    "name": "Workflow at startup",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          260,
          200
        ]
      },
      {
        "parameters": {
          "events": [
            "init"
          ]
        },
        "name": "n8n Trigger",
        "type": "n8n-nodes-base.n8nTrigger",
        "typeVersion": 1,
        "position": [
          260,
          40
        ]
      },
      {
        "parameters": {
          "operation": "status",
          "repositoryPath": "/home/node/backup/rsc"
        },
        "name": "Git",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          660,
          200
        ],
        "continueOnFail": true
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{$json[\"error\"]}}",
                "operation": "isEmpty"
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          860,
          200
        ]
      },
      {
        "parameters": {
          "authentication": "gitPassword",
          "operation": "clone",
          "repositoryPath": "={{$node[\"Git\"].parameter[\"repositoryPath\"]}}",
          "sourceRepository": "={{ $env.GIT_URL }}"
        },
        "name": "Git1",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          1040,
          300
        ],
        "credentials": {
          "gitPassword": {
            "id": "3",
            "name": "Git account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.GIT_USING ? $env.GIT_USING : \"false\" }}",
                "value2": "true"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF1",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          460,
          200
        ]
      },
      {
        "parameters": {
          "operation": "addConfig",
          "repositoryPath": "={{$node[\"Git\"].parameter[\"repositoryPath\"]}}",
          "key": "user.name",
          "value": "={{ $env.GIT_CONFIG_USERNAME}}",
          "options": {}
        },
        "name": "Git2",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          1200,
          200
        ]
      },
      {
        "parameters": {
          "operation": "addConfig",
          "repositoryPath": "={{$node[\"Git\"].parameter[\"repositoryPath\"]}}",
          "key": "user.email",
          "value": "={{ $env.GIT_CONFIG_USERMAIL}}",
          "options": {}
        },
        "name": "Git3",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          1420,
          200
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.MK_BACKUP_BINARY ? $env.MK_BACKUP_BINARY : \"true\" }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF2",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          460,
          40
        ]
      },
      {
        "parameters": {
          "command": "([ ! -d \"/home/node/backup/bin\" ] && mkdir /home/node/backup/bin);([ ! -d \"/home/node/backup/rsc\" ] && mkdir /home/node/backup/rsc)"
        },
        "name": "Execute Command",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          660,
          40
        ],
        "continueOnFail": true
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "n8n Trigger": {
        "main": [
          [
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "Git2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Git1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF1": {
        "main": [
          [
            {
              "node": "Git",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git2": {
        "main": [
          [
            {
              "node": "Git3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git1": {
        "main": [
          [
            {
              "node": "Git2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF2": {
        "main": [
          [
            {
              "node": "Execute Command",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-09-05T17:53:07.492Z",
    "updatedAt": "2021-12-07T10:00:04.813Z",
    "settings": {
      "errorWorkflow": "3"
    },
    "staticData": null
  },
  {
    "id": 2,
    "name": "Mikrotik Backup",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          120,
          300
        ]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT * FROM device WHERE active LIKE '1'"
        },
        "name": "MySQL",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          320,
          300
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list"
      },
      {
        "parameters": {
          "conditions": {
            "boolean": [],
            "string": [
              {
                "value1": "={{ $env.MK_BACKUP_BINARY ? $env.MK_BACKUP_BINARY : \"true\" }}",
                "value2": "true"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1000,
          120
        ]
      },
      {
        "parameters": {
          "conditions": {
            "boolean": [],
            "string": [
              {
                "value1": "={{ $env.MK_BACKUP_EXPORT ? $env.MK_BACKUP_EXPORT : \"true\" }}",
                "value2": "true"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF1",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1000,
          480
        ]
      },
      {
        "parameters": {},
        "name": "DontExportBackupCreate",
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          1240,
          540
        ]
      },
      {
        "parameters": {},
        "name": "DontBinaryBackupCreate",
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          1240,
          210
        ]
      },
      {
        "parameters": {
          "mode": "mergeByIndex",
          "join": "outer"
        },
        "name": "Merge",
        "type": "n8n-nodes-base.merge",
        "typeVersion": 1,
        "position": [
          3000,
          240
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.GIT_USING ? $env.GIT_USING : \"false\" }}",
                "value2": "true"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF2",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1920,
          360
        ]
      },
      {
        "parameters": {
          "authentication": "gitPassword",
          "operation": "push",
          "repositoryPath": "={{$node[\"Set1\"].json[\"folderforrsc\"]}}",
          "options": {}
        },
        "name": "Git2",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          2500,
          360
        ],
        "credentials": {
          "gitPassword": {
            "id": "3",
            "name": "Git account"
          }
        }
      },
      {
        "parameters": {
          "batchSize": 1,
          "options": {}
        },
        "name": "SplitInBatches",
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 1,
        "position": [
          520,
          300
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "boolean": [
              {
                "value1": true,
                "value2": "={{$node[\"SplitInBatches\"].context[\"noItemsLeft\"]}}"
              }
            ]
          }
        },
        "name": "IF3",
        "type": "n8n-nodes-base.if",
        "position": [
          3760,
          200
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "operation": "commit",
          "repositoryPath": "={{$node[\"Set1\"].json[\"folderforrsc\"]}}",
          "message": "=Резервная копия {{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}} от {{new Date().toLocaleDateString()}} {{new Date().toLocaleTimeString()}}",
          "options": {}
        },
        "name": "Git3",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          2300,
          360
        ]
      },
      {
        "parameters": {
          "operation": "add",
          "repositoryPath": "={{$node[\"Set1\"].json[\"folderforrsc\"]}}",
          "pathsToAdd": "={{$node[\"Set1\"].json[\"filenamersc\"]}}"
        },
        "name": "Git",
        "type": "n8n-nodes-base.git",
        "typeVersion": 1,
        "position": [
          2100,
          360
        ]
      },
      {
        "parameters": {
          "triggerTimes": {
            "item": [
              {
                "mode": "custom",
                "cronExpression": "={{ $env.CRON_START ? $env.CRON_START : \"0 0 22 * * *\"}}"
              }
            ]
          }
        },
        "name": "Cron",
        "type": "n8n-nodes-base.cron",
        "typeVersion": 1,
        "position": [
          120,
          100
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.MK_BACKUP_BINARY }}",
                "value2": "true"
              },
              {
                "value1": "={{ $env.MK_BACKUP_EXPORT }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF4",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          2700,
          40
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.MK_BACKUP_BINARY }}",
                "value2": "true"
              },
              {
                "value1": "={{ $env.MK_BACKUP_EXPORT }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF5",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          2700,
          360
        ]
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "filenamebin",
                "value": "={{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}}_{{ $node[\"CurrentTime1\"].json[\"time\"] }}.backup"
              },
              {
                "name": "filenameonmikrotik",
                "value": "={{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}}.backup"
              },
              {
                "name": "folderforbin",
                "value": "/home/node/backup/bin/"
              },
              {
                "name": "username",
                "value": "={{$node[\"SplitInBatches\"].json[\"username\"]}}"
              },
              {
                "name": "ip_address",
                "value": "={{$node[\"SplitInBatches\"].json[\"ip_address\"]}}"
              },
              {
                "name": "sshport",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshport\"]}}"
              },
              {
                "name": "sshuse",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshuse\"]}}"
              },
              {
                "name": "sshkey",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshkey\"]}}"
              },
              {
                "name": "password",
                "value": "={{ $env.DATA_ENCRYPT_PASSWORD ? $node[\"HTTP Request\"].json[\"password\"] : $node[\"SplitInBatches\"].json[\"password\"] }}"
              }
            ]
          },
          "options": {}
        },
        "name": "Set",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1440,
          40
        ]
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "folderforrsc",
                "value": "/home/node/backup/rsc/"
              },
              {
                "name": "filenamersc",
                "value": "={{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}}.rsc"
              },
              {
                "name": "username",
                "value": "={{$node[\"SplitInBatches\"].json[\"username\"]}}"
              },
              {
                "name": "ip_address",
                "value": "={{$node[\"SplitInBatches\"].json[\"ip_address\"]}}"
              },
              {
                "name": "sshport",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshport\"]}}"
              },
              {
                "name": "sshuse",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshuse\"]}}"
              },
              {
                "name": "sshkey",
                "value": "={{$node[\"SplitInBatches\"].json[\"sshkey\"]}}"
              },
              {
                "name": "password",
                "value": "={{ $env.DATA_ENCRYPT_PASSWORD ? $node[\"HTTP Request\"].json[\"password\"] : $node[\"SplitInBatches\"].json[\"password\"] }}"
              }
            ],
            "number": []
          },
          "options": {}
        },
        "name": "Set1",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1240,
          380
        ]
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatus",
                "value": "BAD"
              },
              {
                "name": "lastbad",
                "value": "={{$node[\"CurrentTime\"].json[\"time\"]}}"
              }
            ],
            "number": [
              {
                "name": "id",
                "value": "={{$node[\"SplitInBatches\"].json[\"id\"]}}"
              }
            ]
          },
          "options": {}
        },
        "name": "Set2",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          3400,
          260
        ]
      },
      {
        "parameters": {
          "operation": "update",
          "table": "device",
          "columns": "laststatus, lastbad"
        },
        "name": "MySQL1",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          3560,
          260
        ],
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        }
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatus",
                "value": "OK"
              },
              {
                "name": "lastok",
                "value": "={{$node[\"CurrentTime\"].json[\"time\"]}}"
              }
            ],
            "number": [
              {
                "name": "id",
                "value": "={{$node[\"SplitInBatches\"].json[\"id\"]}}"
              }
            ]
          },
          "options": {}
        },
        "name": "Set3",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          3400,
          20
        ]
      },
      {
        "parameters": {
          "operation": "update",
          "table": "device",
          "columns": "laststatus, lastok"
        },
        "name": "MySQL2",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          3560,
          20
        ],
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{$json[\"laststatusrsc\"]}}",
                "value2": "OK"
              },
              {
                "value1": "={{$json[\"laststatusbin\"]}}",
                "value2": "OK"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF11",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          3200,
          80
        ]
      },
      {
        "parameters": {
          "path": "backupall",
          "options": {}
        },
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          120,
          520
        ],
        "webhookId": "33deb629-14e4-4a24-b245-50dfd6fe7cb5"
      },
      {
        "parameters": {
          "path": "backupone",
          "options": {}
        },
        "name": "Webhook1",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          120,
          -60
        ],
        "webhookId": "c4790d77-a07e-4507-8b58-c3fd4a0f8623"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT * FROM device WHERE id LIKE '{{$node[\"Webhook1\"].json[\"query\"][\"id\"]}}'"
        },
        "name": "MySQL3",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          320,
          80
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list"
      },
      {
        "parameters": {
          "value": "={{ new Date()}}",
          "dataPropertyName": "time",
          "custom": true,
          "toFormat": "YYYY-MM-DD HH:mm:ss",
          "options": {}
        },
        "name": "CurrentTime",
        "type": "n8n-nodes-base.dateTime",
        "typeVersion": 1,
        "position": [
          3040,
          80
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.REPORT_SEND_TELEGRAM ? $env.REPORT_SEND_TELEGRAM : \"false\"}}",
                "value2": "true"
              },
              {
                "value1": "={{ $env.REPORT_SEND_EMAIL ? $env.REPORT_SEND_EMAIL : \"false\"}}",
                "value2": "true"
              }
            ]
          },
          "combineOperation": "any"
        },
        "name": "IF14",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          3960,
          200
        ]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT\n\tCOUNT(*) 'All',\n\tCOUNT(IF(active = '1', 1, NULL)) 'Active',\n\tCOUNT(IF(laststatus = 'BAD' AND active = '1', 1, NULL)) 'Active with error'\nFROM\n\tdevice"
        },
        "name": "MySQL4",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          4140,
          200
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list"
      },
      {
        "parameters": {
          "chatId": "={{ $env.TELEGRAM_CHATID_REPORT }}",
          "text": "=Актуальные данные резервного копирования Mikrotik\nВсего устройств в базе: {{ $node[\"MySQL4\"].json[\"All\"] }}\nАктивных устройств: {{ $node[\"MySQL4\"].json[\"Active\"] }}\nАктивных устройств с ошибками: {{ $node[\"MySQL4\"].json[\"Active with error\"] }}\nВремя завершения задания: {{new Date().toLocaleDateString()}} {{new Date().toLocaleTimeString()}}",
          "additionalFields": {}
        },
        "name": "Telegram",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [
          4540,
          80
        ],
        "credentials": {
          "telegramApi": {
            "id": "5",
            "name": "Telegram account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.REPORT_SEND_TELEGRAM ? $env.REPORT_SEND_TELEGRAM : \"false\"}}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF15",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          4340,
          80
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.REPORT_SEND_EMAIL ? $env.REPORT_SEND_EMAIL : \"false\"}}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF16",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          4340,
          320
        ]
      },
      {
        "parameters": {
          "fromEmail": "={{ $env.SMTP_FROM_MAIL }}",
          "toEmail": "={{ $env.SMTP_TO_MAIL_REPORT }}",
          "subject": "RMBackup Notification",
          "text": "=Актуальные данные резервного копирования Mikrotik\nВсего устройств в базе: {{ $node[\"MySQL4\"].json[\"All\"] }}\nАктивных устройств: {{ $node[\"MySQL4\"].json[\"Active\"] }}\nАктивных устройств с ошибками: {{ $node[\"MySQL4\"].json[\"Active with error\"] }}\nВремя завершения задания: {{new Date().toLocaleDateString()}} {{new Date().toLocaleTimeString()}}",
          "options": {}
        },
        "name": "Send Email",
        "type": "n8n-nodes-base.emailSend",
        "typeVersion": 1,
        "position": [
          4540,
          320
        ],
        "credentials": {
          "smtp": {
            "id": "4",
            "name": "SMTP account"
          }
        }
      },
      {
        "parameters": {
          "value": "={{ new Date()}}",
          "dataPropertyName": "time",
          "custom": true,
          "toFormat": "DD.MM.YYYY_HH.mm.ss",
          "options": {}
        },
        "name": "CurrentTime1",
        "type": "n8n-nodes-base.dateTime",
        "typeVersion": 1,
        "position": [
          1240,
          40
        ]
      },
      {
        "parameters": {
          "workflowId": "7"
        },
        "name": "Execute Workflow",
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1,
        "position": [
          1460,
          380
        ],
        "continueOnFail": true
      },
      {
        "parameters": {
          "workflowId": "8"
        },
        "name": "Execute Workflow1",
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1,
        "position": [
          1640,
          40
        ],
        "continueOnFail": true
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $node[\"Execute Workflow\"].json[\"laststatusrsc\"] }}",
                "value2": "OK"
              }
            ]
          }
        },
        "name": "IF17",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1660,
          480
        ]
      },
      {
        "parameters": {
          "url": "http://web/device/passdecrypt",
          "responseFormat": "string",
          "dataPropertyName": "password",
          "options": {},
          "queryParametersUi": {
            "parameter": [
              {
                "name": "encryptpass",
                "value": "={{ $node[\"SplitInBatches\"].json[\"password\"] }}"
              },
              {
                "name": "secretkey",
                "value": "={{ $env.DATA_ENCRYPT_PASSWORD }}"
              }
            ]
          }
        },
        "name": "HTTP Request",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 1,
        "position": [
          860,
          300
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.DATA_ENCRYPT_PASSWORD }}",
                "operation": "isEmpty"
              }
            ]
          }
        },
        "name": "IF6",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          700,
          300
        ]
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL": {
        "main": [
          [
            {
              "node": "SplitInBatches",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "CurrentTime1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "DontBinaryBackupCreate",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF1": {
        "main": [
          [
            {
              "node": "Set1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "DontExportBackupCreate",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Merge": {
        "main": [
          [
            {
              "node": "CurrentTime",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF2": {
        "main": [
          [
            {
              "node": "Git",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "IF5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SplitInBatches": {
        "main": [
          [
            {
              "node": "IF6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git2": {
        "main": [
          [
            {
              "node": "IF5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF3": {
        "main": [
          [
            {
              "node": "IF14",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "SplitInBatches",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git3": {
        "main": [
          [
            {
              "node": "Git2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Git": {
        "main": [
          [
            {
              "node": "Git3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Cron": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF4": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "CurrentTime",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF5": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 1
            }
          ],
          [
            {
              "node": "CurrentTime",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set": {
        "main": [
          [
            {
              "node": "Execute Workflow1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set1": {
        "main": [
          [
            {
              "node": "Execute Workflow",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set2": {
        "main": [
          [
            {
              "node": "MySQL1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL1": {
        "main": [
          [
            {
              "node": "IF3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set3": {
        "main": [
          [
            {
              "node": "MySQL2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL2": {
        "main": [
          [
            {
              "node": "IF3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF11": {
        "main": [
          [
            {
              "node": "Set3",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook1": {
        "main": [
          [
            {
              "node": "MySQL3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL3": {
        "main": [
          [
            {
              "node": "SplitInBatches",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "CurrentTime": {
        "main": [
          [
            {
              "node": "IF11",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF14": {
        "main": [
          [
            {
              "node": "MySQL4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL4": {
        "main": [
          [
            {
              "node": "IF15",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF16",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF15": {
        "main": [
          [
            {
              "node": "Telegram",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF16": {
        "main": [
          [
            {
              "node": "Send Email",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "CurrentTime1": {
        "main": [
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Workflow": {
        "main": [
          [
            {
              "node": "IF17",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF17": {
        "main": [
          [
            {
              "node": "IF2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "IF5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Workflow1": {
        "main": [
          [
            {
              "node": "IF4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF6": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "HTTP Request",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-11-15T19:15:31.061Z",
    "updatedAt": "2021-12-19T13:15:53.318Z",
    "settings": {
      "errorWorkflow": "3"
    },
    "staticData": null
  },
  {
    "id": 3,
    "name": "Error workflow",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          240,
          300
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.ERROR_NOTIFICATION_TELEGRAM ? $env.ERROR_NOTIFICATION_TELEGRAM : \"false\" }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          460,
          120
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.ERROR_NOTIFICATION_EMAIL ? $env.ERROR_NOTIFICATION_EMAIL : \"false\" }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF1",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          460,
          300
        ]
      },
      {
        "parameters": {
          "fromEmail": "={{ $env.SMTP_FROM_MAIL }}",
          "toEmail": "={{ $env.SMTP_TO_MAIL_NOTIFY }}",
          "subject": "RMBackup Notification",
          "text": "=Ошибка в процессе: {{ $node[\"Error Trigger\"].json[\"workflow\"][\"name\"] }} (ID: {{ $node[\"Error Trigger\"].json[\"workflow\"][\"id\"] }})\nТип ошибки: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"name\"] }}\nОшибка в узле: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"node\"][\"name\"] }}\nТекст ошибки: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"message\"] }}\nПодробное описание ошибки:\n{{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"stack\"] }}",
          "options": {}
        },
        "name": "Send Email",
        "type": "n8n-nodes-base.emailSend",
        "typeVersion": 1,
        "position": [
          660,
          300
        ],
        "credentials": {
          "smtp": {
            "id": "4",
            "name": "SMTP account"
          }
        }
      },
      {
        "parameters": {
          "chatId": "={{ $env.TELEGRAM_CHATID_NOTIFY }}",
          "text": "=Ошибка в процессе: {{ $node[\"Error Trigger\"].json[\"workflow\"][\"name\"] }} (ID: {{ $node[\"Error Trigger\"].json[\"workflow\"][\"id\"] }})\nТип ошибки: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"name\"] }}\nОшибка в узле: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"node\"][\"name\"] }}\nТекст ошибки: {{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"message\"] }}\nПодробное описание ошибки:\n{{ $node[\"Error Trigger\"].json[\"execution\"][\"error\"][\"stack\"] }}",
          "additionalFields": {}
        },
        "name": "Telegram",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [
          660,
          120
        ],
        "credentials": {
          "telegramApi": {
            "id": "5",
            "name": "Telegram account"
          }
        }
      },
      {
        "parameters": {},
        "name": "Error Trigger",
        "type": "n8n-nodes-base.errorTrigger",
        "typeVersion": 1,
        "position": [
          240,
          120
        ]
      },
      {
        "parameters": {
          "path": "ad03b049-ec34-4683-b405-49010361dac2",
          "options": {}
        },
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          240,
          480
        ],
        "webhookId": "ad03b049-ec34-4683-b405-49010361dac2"
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF1": {
        "main": [
          [
            {
              "node": "Send Email",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "Telegram",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Error Trigger": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            },
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-11-27T12:10:40.170Z",
    "updatedAt": "2021-12-17T17:32:12.338Z",
    "settings": {},
    "staticData": null
  },
  {
    "id": 4,
    "name": "Purge old backup",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          240,
          300
        ]
      },
      {
        "parameters": {
          "command": "=find {{$node[\"Set\"].json[\"folderforbin\"]}} -name \"{{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}}*\" -type f -printf '%T+ %p\\n' | sort -r | head -{{$node[\"Set\"].json[\"purgenpiece\"]}} | grep -n \"\" | grep ^{{$node[\"Set\"].json[\"purgenpiece\"]}} | awk '{print $2}'"
        },
        "name": "Execute Command",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          1200,
          220
        ]
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "folderforbin",
                "value": "/home/node/backup/bin/"
              },
              {
                "name": "purgeoldbackup",
                "value": "={{ $env.PURGE_OLD_BACKUP ? $env.PURGE_OLD_BACKUP : \"true\" }}"
              },
              {
                "name": "purgenpiece",
                "value": "={{ $env.PURGE_N_PIECE ? parseInt($env.PURGE_N_PIECE) + 1 : 11 }}"
              }
            ]
          },
          "options": {}
        },
        "name": "Set",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          420,
          300
        ]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT * FROM device"
        },
        "name": "MySQL",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          800,
          220
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get device list"
      },
      {
        "parameters": {
          "batchSize": 1,
          "options": {}
        },
        "name": "SplitInBatches",
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 1,
        "position": [
          1000,
          220
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $node[\"Set\"].json[\"purgeoldbackup\"] }}",
                "value2": "true"
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          600,
          300
        ]
      },
      {
        "parameters": {
          "command": "=find {{$node[\"Set\"].json[\"folderforbin\"]}}  -name \"{{$node[\"SplitInBatches\"].json[\"id\"]}}_{{$node[\"SplitInBatches\"].json[\"name\"]}}*\" ! -newer {{$node[\"Execute Command\"].json[\"stdout\"]}} -type f -delete"
        },
        "name": "Execute Command1",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          1560,
          240
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{$node[\"Execute Command\"].json[\"stdout\"]}}",
                "operation": "isEmpty"
              }
            ]
          }
        },
        "name": "IF1",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1380,
          220
        ]
      },
      {
        "parameters": {
          "triggerTimes": {
            "item": [
              {
                "mode": "custom",
                "cronExpression": "={{ $env.CRON_PURGE_START ? $env.CRON_START : \"0 0 21 * * *\"}}"
              }
            ]
          }
        },
        "name": "Cron",
        "type": "n8n-nodes-base.cron",
        "typeVersion": 1,
        "position": [
          240,
          140
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "boolean": [
              {
                "value1": true,
                "value2": "={{$node[\"SplitInBatches\"].context[\"noItemsLeft\"]}}"
              }
            ]
          }
        },
        "name": "IF3",
        "type": "n8n-nodes-base.if",
        "position": [
          1740,
          120
        ],
        "typeVersion": 1
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL": {
        "main": [
          [
            {
              "node": "SplitInBatches",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SplitInBatches": {
        "main": [
          [
            {
              "node": "Execute Command",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command": {
        "main": [
          [
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF1": {
        "main": [
          [
            {
              "node": "IF3",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Execute Command1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Cron": {
        "main": [
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command1": {
        "main": [
          [
            {
              "node": "IF3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF3": {
        "main": [
          [],
          [
            {
              "node": "SplitInBatches",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-12-02T07:59:06.522Z",
    "updatedAt": "2021-12-14T11:21:04.225Z",
    "settings": {
      "saveExecutionProgress": true,
      "saveManualExecutions": true
    },
    "staticData": null
  },
  {
    "id": 5,
    "name": "DownloadFile",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          240,
          300
        ]
      },
      {
        "parameters": {
          "path": "download",
          "responseMode": "responseNode",
          "options": {
            "rawBody": true
          }
        },
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          240,
          500
        ],
        "webhookId": "d792541a-0838-4ded-94d4-a3395b7971ae"
      },
      {
        "parameters": {
          "respondWith": "binary",
          "options": {
            "responseCode": 200
          }
        },
        "name": "Respond to Webhook",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 1,
        "position": [
          1160,
          500
        ]
      },
      {
        "parameters": {
          "filePath": "={{ $json[\"filepath\"] }}"
        },
        "name": "Read Binary File",
        "type": "n8n-nodes-base.readBinaryFile",
        "typeVersion": 1,
        "position": [
          960,
          500
        ]
      },
      {
        "parameters": {
          "dataType": "string",
          "value1": "={{$node[\"Webhook\"].json[\"query\"][\"type\"]}}",
          "rules": {
            "rules": [
              {
                "value2": "bin"
              },
              {
                "value2": "rsc",
                "output": 1
              }
            ]
          },
          "fallbackOutput": 3
        },
        "name": "Switch",
        "type": "n8n-nodes-base.switch",
        "typeVersion": 1,
        "position": [
          460,
          500
        ]
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "filepath",
                "value": "=/home/node/backup/rsc/{{$node[\"Webhook\"].json[\"query\"][\"id\"]}}_{{$node[\"Webhook\"].json[\"query\"][\"name\"]}}.rsc"
              }
            ]
          },
          "options": {}
        },
        "name": "Set",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          660,
          500
        ]
      },
      {
        "parameters": {
          "command": "=find /home/node/backup/bin/ -name \"{{$node[\"Webhook\"].json[\"query\"][\"id\"]}}_{{$node[\"Webhook\"].json[\"query\"][\"name\"]}}*\" -type f -printf '%T+ %p\\n' | sort -r | head -1 | awk '{print $2}'"
        },
        "name": "Execute Command",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          660,
          340
        ]
      },
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "filepath",
                "value": "={{ $node[\"Execute Command\"].json[\"stdout\"] }}"
              }
            ]
          },
          "options": {}
        },
        "name": "Set1",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          820,
          340
        ]
      },
      {
        "parameters": {
          "respondWith": "noData",
          "options": {
            "responseCode": 400
          }
        },
        "name": "Respond to Webhook1",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 1,
        "position": [
          660,
          660
        ]
      }
    ],
    "connections": {
      "Webhook": {
        "main": [
          [
            {
              "node": "Switch",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Read Binary File": {
        "main": [
          [
            {
              "node": "Respond to Webhook",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch": {
        "main": [
          [
            {
              "node": "Execute Command",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ],
          [],
          [
            {
              "node": "Respond to Webhook1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set": {
        "main": [
          [
            {
              "node": "Read Binary File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command": {
        "main": [
          [
            {
              "node": "Set1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set1": {
        "main": [
          [
            {
              "node": "Read Binary File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-12-03T18:10:27.992Z",
    "updatedAt": "2021-12-11T16:25:04.331Z",
    "settings": {
      "saveExecutionProgress": "DEFAULT",
      "errorWorkflow": "3"
    },
    "staticData": null
  },
  {
    "id": 6,
    "name": "Test Connection",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          -340,
          300
        ]
      },
      {
        "parameters": {
          "path": "testconnection",
          "responseMode": "responseNode",
          "options": {}
        },
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          -340,
          460
        ],
        "webhookId": "17577a90-4e1d-4d14-9cd5-be38e35cf2e1"
      },
      {
        "parameters": {
          "respondWith": "text",
          "responseBody": "<div class=\"alert alert-success\">Подключение прошло успешно</div>",
          "options": {
            "responseCode": 200
          }
        },
        "name": "Respond to Webhook",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 1,
        "position": [
          1220,
          360
        ]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT * FROM device WHERE id LIKE '{{$node[\"Webhook\"].json[\"query\"][\"id\"]}}'"
        },
        "name": "MySQL",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          -40,
          380
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list"
      },
      {
        "parameters": {
          "command": "=sshpass -p {{ $env.DATA_ENCRYPT_PASSWORD ? $node[\"HTTP Request\"].json[\"password\"] : $node[\"MySQL\"].json[\"password\"] }}  ssh -o StrictHostKeyChecking=no {{ $node[\"MySQL\"].json[\"username\"] }}@{{ $node[\"MySQL\"].json[\"ip_address\"] }} -p {{ $node[\"MySQL\"].json[\"sshport\"] }} ':put [/system identity get name]' > /dev/null 2>&1; echo $?"
        },
        "name": "Execute Command",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          760,
          480
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $node[\"Execute Command\"].json[\"stdout\"] }}",
                "value2": "0"
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1000,
          480
        ]
      },
      {
        "parameters": {
          "respondWith": "text",
          "responseBody": "=<div class=\"alert alert-danger\">Ошибка с кодом {{ $node[\"Execute Command\"].json[\"stdout\"] }}. {{ $node[\"Execute Command\"].json[\"stderr\"] }}</div>",
          "options": {
            "responseCode": 200
          }
        },
        "name": "Respond to Webhook1",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 1,
        "position": [
          1220,
          520
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"MySQL\"].json[\"sshuse\"]}}",
                "operation": "equal",
                "value2": 1
              }
            ]
          }
        },
        "name": "IF1",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          540,
          380
        ]
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "command": ":put [/system identity get name]",
          "cwd": "={{}}"
        },
        "name": "SSH2",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          760,
          240
        ],
        "notesInFlow": true,
        "alwaysOutputData": true,
        "credentials": {
          "sshPrivateKey": {
            "id": "7",
            "name": "SSH Private Key account Test"
          }
        },
        "continueOnFail": true,
        "notes": "Create binary backup"
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $node[\"SSH2\"].json[\"stdout\"] }}",
                "operation": "isEmpty"
              }
            ]
          }
        },
        "name": "IF2",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1000,
          240
        ]
      },
      {
        "parameters": {
          "respondWith": "text",
          "responseBody": "=<div class=\"alert alert-danger\">Подключение не удалось</div>",
          "options": {
            "responseCode": 200
          }
        },
        "name": "Respond to Webhook2",
        "type": "n8n-nodes-base.respondToWebhook",
        "typeVersion": 1,
        "position": [
          1220,
          200
        ]
      },
      {
        "parameters": {
          "url": "http://web/device/passdecrypt",
          "responseFormat": "string",
          "dataPropertyName": "password",
          "options": {},
          "queryParametersUi": {
            "parameter": [
              {
                "name": "encryptpass",
                "value": "={{ $node[\"MySQL\"].json[\"password\"] }}"
              },
              {
                "name": "secretkey",
                "value": "={{ $env.DATA_ENCRYPT_PASSWORD }}"
              }
            ]
          }
        },
        "name": "HTTP Request",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 1,
        "position": [
          360,
          380
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{ $env.DATA_ENCRYPT_PASSWORD }}",
                "operation": "isEmpty"
              }
            ]
          }
        },
        "name": "IF6",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          160,
          380
        ]
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "MySQL": {
        "main": [
          [
            {
              "node": "IF6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "Respond to Webhook",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Respond to Webhook1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF1": {
        "main": [
          [
            {
              "node": "SSH2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Execute Command",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH2": {
        "main": [
          [
            {
              "node": "IF2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF2": {
        "main": [
          [
            {
              "node": "Respond to Webhook2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Respond to Webhook",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request": {
        "main": [
          [
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF6": {
        "main": [
          [
            {
              "node": "IF1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "HTTP Request",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-12-14T09:28:03.807Z",
    "updatedAt": "2021-12-19T12:38:05.388Z",
    "settings": {},
    "staticData": null
  },
  {
    "id": 7,
    "name": "Export Backup",
    "active": false,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          -240,
          260
        ]
      },
      {
        "parameters": {
          "command": "=/export{{ $env.MK_BACKUP_HIDE_SENSITIVE == \"true\" ? \" hide-sensitive\" : \"\" }} file={{$node[\"Start\"].json[\"filenamersc\"]}}",
          "cwd": "={{}}"
        },
        "name": "SSH2",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          140,
          360
        ],
        "notesInFlow": true,
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Create export backup"
      },
      {
        "parameters": {
          "resource": "file",
          "operation": "download",
          "path": "={{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "SSH3",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          340,
          360
        ],
        "notesInFlow": true,
        "retryOnFail": true,
        "maxTries": 2,
        "waitBetweenTries": 3000,
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Download binary backup"
      },
      {
        "parameters": {
          "fileName": "={{$node[\"Start\"].json[\"folderforrsc\"]}}{{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "Write Binary File1",
        "type": "n8n-nodes-base.writeBinaryFile",
        "typeVersion": 1,
        "position": [
          540,
          360
        ]
      },
      {
        "parameters": {
          "command": "=/file remove \"{{$node[\"Start\"].json[\"filenamersc\"]}}\"",
          "cwd": "={{}}"
        },
        "name": "SSH4",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          740,
          360
        ],
        "notesInFlow": true,
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Delete binary backup"
      },
      {
        "parameters": {
          "command": "=sed -i 's/^#.*by/#/' {{$node[\"Start\"].json[\"folderforrsc\"]}}{{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "Execute Command",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          940,
          360
        ],
        "continueOnFail": true
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH2\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF8",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          240,
          560
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH3\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF9",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          440,
          600
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH4\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF10",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          840,
          620
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$json[\"exitCode\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF12",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1040,
          540
        ]
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatusrsc",
                "value": "BAD"
              }
            ]
          },
          "options": {}
        },
        "name": "Set5",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1360,
          280
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"Start\"].json[\"sshuse\"]}}",
                "operation": "equal",
                "value2": 1
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          -60,
          260
        ]
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "command": "=/export{{ $env.MK_BACKUP_HIDE_SENSITIVE == \"true\" ? \" hide-sensitive\" : \"\" }} file={{$node[\"Start\"].json[\"filenamersc\"]}}",
          "cwd": "={{}}"
        },
        "name": "SSH",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          100,
          -180
        ],
        "notesInFlow": true,
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Create export backup"
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "resource": "file",
          "operation": "download",
          "path": "={{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "SSH5",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          300,
          -180
        ],
        "notesInFlow": true,
        "retryOnFail": true,
        "maxTries": 2,
        "waitBetweenTries": 3000,
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Download binary backup"
      },
      {
        "parameters": {
          "fileName": "={{$node[\"Start\"].json[\"folderforrsc\"]}}{{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "Write Binary File",
        "type": "n8n-nodes-base.writeBinaryFile",
        "typeVersion": 1,
        "position": [
          500,
          -180
        ]
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "command": "=/file remove \"{{$node[\"Start\"].json[\"filenamersc\"]}}\"",
          "cwd": "={{}}"
        },
        "name": "SSH6",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          700,
          -180
        ],
        "notesInFlow": true,
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Delete binary backup"
      },
      {
        "parameters": {
          "command": "=sed -i 's/^#.*by/#/' {{$node[\"Start\"].json[\"folderforrsc\"]}}{{$node[\"Start\"].json[\"filenamersc\"]}}"
        },
        "name": "Execute Command1",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          900,
          -180
        ],
        "continueOnFail": true
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF11",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          200,
          20
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH5\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF13",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          400,
          60
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH6\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF14",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          800,
          80
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$json[\"exitCode\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF15",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1000,
          0
        ]
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatusrsc",
                "value": "OK"
              }
            ]
          },
          "options": {}
        },
        "name": "Set",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1360,
          60
        ]
      }
    ],
    "connections": {
      "Start": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH2": {
        "main": [
          [
            {
              "node": "IF8",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH3": {
        "main": [
          [
            {
              "node": "IF9",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Write Binary File1": {
        "main": [
          [
            {
              "node": "SSH4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH4": {
        "main": [
          [
            {
              "node": "IF10",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command": {
        "main": [
          [
            {
              "node": "IF12",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF8": {
        "main": [
          [
            {
              "node": "Set5",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "SSH3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF9": {
        "main": [
          [
            {
              "node": "Set5",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Write Binary File1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF10": {
        "main": [
          [
            {
              "node": "Set5",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Execute Command",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF12": {
        "main": [
          [
            {
              "node": "Set5",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "SSH",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "SSH2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH": {
        "main": [
          [
            {
              "node": "IF11",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH5": {
        "main": [
          [
            {
              "node": "IF13",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Write Binary File": {
        "main": [
          [
            {
              "node": "SSH6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH6": {
        "main": [
          [
            {
              "node": "IF14",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Execute Command1": {
        "main": [
          [
            {
              "node": "IF15",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF11": {
        "main": [
          [],
          [
            {
              "node": "SSH5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF13": {
        "main": [
          [],
          [
            {
              "node": "Write Binary File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF14": {
        "main": [
          [],
          [
            {
              "node": "Execute Command1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF15": {
        "main": [
          [
            {
              "node": "Set5",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-12-18T14:59:02.109Z",
    "updatedAt": "2021-12-19T12:59:58.739Z",
    "settings": {
      "saveExecutionProgress": true,
      "saveManualExecutions": true,
      "errorWorkflow": "3"
    },
    "staticData": null
  },
  {
    "id": 8,
    "name": "Binary Backup",
    "active": false,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          220,
          320
        ]
      },
      {
        "parameters": {
          "command": "=/system backup save{{ $env.MK_BACKUP_ENCRYPT_PASSWORD ? \" dont-encrypt=no encryption=aes-sha256\" : \" dont-encrypt=yes\"}} name={{$node[\"Start\"].json[\"filenameonmikrotik\"]}}{{ $env.MK_BACKUP_ENCRYPT_PASSWORD ? \" password=\" +  $env.MK_BACKUP_ENCRYPT_PASSWORD : \"\"}}",
          "cwd": "={{}}"
        },
        "name": "SSH",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          600,
          640
        ],
        "notesInFlow": true,
        "alwaysOutputData": true,
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Create binary backup"
      },
      {
        "parameters": {
          "resource": "file",
          "operation": "download",
          "path": "={{$node[\"Start\"].json[\"filenameonmikrotik\"]}}"
        },
        "name": "SSH1",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          800,
          640
        ],
        "notesInFlow": true,
        "retryOnFail": true,
        "maxTries": 2,
        "waitBetweenTries": 3000,
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Download binary backup"
      },
      {
        "parameters": {
          "command": "=/file remove \"{{$node[\"Start\"].json[\"filenameonmikrotik\"]}}\"",
          "cwd": "={{}}"
        },
        "name": "SSH5",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          1200,
          640
        ],
        "notesInFlow": true,
        "credentials": {
          "sshPassword": {
            "id": "2",
            "name": "SSH Password account"
          }
        },
        "continueOnFail": true,
        "notes": "Delete binary backup"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF6",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          700,
          480
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH1\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF7",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          900,
          400
        ]
      },
      {
        "parameters": {
          "fileName": "={{$node[\"Start\"].json[\"folderforbin\"]}}{{$node[\"Start\"].json[\"filenamebin\"]}}"
        },
        "name": "Write Binary File",
        "type": "n8n-nodes-base.writeBinaryFile",
        "typeVersion": 1,
        "position": [
          1000,
          640
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH5\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF13",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1300,
          480
        ]
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatusbin",
                "value": "BAD"
              }
            ]
          },
          "options": {}
        },
        "name": "Set4",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1560,
          420
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"Start\"].json[\"sshuse\"]}}",
                "operation": "equal",
                "value2": 1
              }
            ]
          }
        },
        "name": "IF",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          400,
          320
        ]
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "command": "=/system backup save{{ $env.MK_BACKUP_ENCRYPT_PASSWORD ? \" dont-encrypt=no encryption=aes-sha256\" : \" dont-encrypt=yes\"}} name={{$node[\"Start\"].json[\"filenameonmikrotik\"]}}{{ $env.MK_BACKUP_ENCRYPT_PASSWORD ? \" password=\" +  $env.MK_BACKUP_ENCRYPT_PASSWORD : \"\"}}",
          "cwd": "={{}}"
        },
        "name": "SSH2",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          620,
          80
        ],
        "notesInFlow": true,
        "alwaysOutputData": true,
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Create binary backup"
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "resource": "file",
          "operation": "download",
          "path": "={{$node[\"Start\"].json[\"filenameonmikrotik\"]}}"
        },
        "name": "SSH3",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          820,
          80
        ],
        "notesInFlow": true,
        "retryOnFail": true,
        "maxTries": 2,
        "waitBetweenTries": 3000,
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Download binary backup"
      },
      {
        "parameters": {
          "authentication": "privateKey",
          "command": "=/file remove \"{{$node[\"Start\"].json[\"filenameonmikrotik\"]}}\"",
          "cwd": "={{}}"
        },
        "name": "SSH6",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [
          1220,
          80
        ],
        "notesInFlow": true,
        "credentials": {
          "sshPrivateKey": {
            "id": "6",
            "name": "SSH Private Key account"
          }
        },
        "continueOnFail": true,
        "notes": "Delete binary backup"
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH2\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF8",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          720,
          -80
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH3\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF9",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          940,
          -180
        ]
      },
      {
        "parameters": {
          "fileName": "={{$node[\"Start\"].json[\"folderforbin\"]}}{{$node[\"Start\"].json[\"filenamebin\"]}}"
        },
        "name": "Write Binary File1",
        "type": "n8n-nodes-base.writeBinaryFile",
        "typeVersion": 1,
        "position": [
          1020,
          80
        ]
      },
      {
        "parameters": {
          "conditions": {
            "string": [],
            "number": [
              {
                "value1": "={{$node[\"SSH6\"].json[\"code\"]}}",
                "operation": "notEqual"
              }
            ]
          }
        },
        "name": "IF14",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          1320,
          -80
        ]
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "laststatusbin",
                "value": "OK"
              }
            ]
          },
          "options": {}
        },
        "name": "Set",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          1560,
          120
        ]
      }
    ],
    "connections": {
      "SSH": {
        "main": [
          [
            {
              "node": "IF6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH1": {
        "main": [
          [
            {
              "node": "IF7",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH5": {
        "main": [
          [
            {
              "node": "IF13",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF6": {
        "main": [
          [
            {
              "node": "Set4",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "SSH1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF7": {
        "main": [
          [
            {
              "node": "Set4",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Write Binary File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Write Binary File": {
        "main": [
          [
            {
              "node": "SSH5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF13": {
        "main": [
          [
            {
              "node": "Set4",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Start": {
        "main": [
          [
            {
              "node": "IF",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF": {
        "main": [
          [
            {
              "node": "SSH2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "SSH",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH2": {
        "main": [
          [
            {
              "node": "IF8",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH3": {
        "main": [
          [
            {
              "node": "IF9",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "SSH6": {
        "main": [
          [
            {
              "node": "IF14",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF8": {
        "main": [
          [],
          [
            {
              "node": "SSH3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF9": {
        "main": [
          [],
          [
            {
              "node": "Write Binary File1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Write Binary File1": {
        "main": [
          [
            {
              "node": "SSH6",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "IF14": {
        "main": [
          [
            {
              "node": "Set4",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2021-12-18T15:22:00.567Z",
    "updatedAt": "2021-12-19T13:00:14.579Z",
    "settings": {
      "saveExecutionProgress": true,
      "saveManualExecutions": true,
      "errorWorkflow": "3"
    },
    "staticData": null
  },
  {
    "id": 9,
    "name": "ZabbixMonitoring",
    "active": true,
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [
          460,
          120
        ]
      },
      {
        "parameters": {
          "path": "lld",
          "responseMode": "lastNode",
          "responseData": "allEntries",
          "options": {}
        },
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          460,
          300
        ],
        "webhookId": "a1aa560b-4dc0-4d79-8329-9554e860b718"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT id,name FROM device WHERE active LIKE '1'"
        },
        "name": "MySQL",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          680,
          300
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list"
      },
      {
        "parameters": {
          "path": "getstatus",
          "responseMode": "lastNode",
          "options": {}
        },
        "name": "Webhook1",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          460,
          500
        ],
        "webhookId": "2365c0ed-9766-4cc2-9eae-e74be986399e"
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "=SELECT laststatus FROM device WHERE id LIKE '{{ $node[\"Webhook1\"].json[\"query\"][\"id\"] }}'"
        },
        "name": "MySQL1",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [
          680,
          500
        ],
        "notesInFlow": true,
        "credentials": {
          "mySql": {
            "id": "1",
            "name": "MySQL account"
          }
        },
        "notes": "Get devices list"
      }
    ],
    "connections": {
      "Webhook": {
        "main": [
          [
            {
              "node": "MySQL",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook1": {
        "main": [
          [
            {
              "node": "MySQL1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "createdAt": "2022-03-12T05:39:01.228Z",
    "updatedAt": "2022-03-12T08:45:14.472Z",
    "settings": {
      "saveExecutionProgress": true,
      "saveManualExecutions": true
    },
    "staticData": null
  }
]